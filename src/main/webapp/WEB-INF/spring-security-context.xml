<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

    <!--<http pattern="/login**" security="none"/>-->

    <global-method-security pre-post-annotations="enabled"/>

    <!--The order is important, higher has more priority-->
    <http use-expressions="true">
        <intercept-url pattern="/auditoriums**" access="hasAuthority('REGISTERED_USER')"/>
        <intercept-url pattern="/showlogin" access="hasAuthority('REGISTERED_USER')"/>
        <intercept-url pattern="/account**/**" access="hasAuthority('REGISTERED_USER')"/>
        <intercept-url pattern="/ticket**/**" access="hasAuthority('REGISTERED_USER')"/>
        <!--Add following rows to restrict all pages and forwarding to login page-->
        <!--<intercept-url pattern="/login*" access="isAnonymous()" />-->
        <!--<intercept-url pattern="/**" access="hasAuthority('REGISTERED_USER')" />-->

        <!--<form-login />-->
        <!--<logout/>-->
        <form-login login-page="/login"
                    default-target-url="/users"
                    authentication-failure-url="/login?error=true"
                    login-processing-url="/perform_login"
        />
        <logout logout-url="/logout"
                logout-success-url="/login?logout=true"

        />
        <!--This is by default, you can comment the line below -->
        <!--<csrf disabled="false"/>-->
        <csrf disabled="true"/>

        <!--If you don't set remember-me-parameter, the default is 'remember-me' name - in login form-->
        <!--The following option with hash based cookies impls-->
        <remember-me key="unique-and-secret"
                     remember-me-cookie="remember-me-cookie-name"
                     token-validity-seconds="86400"
                     remember-me-parameter="myRememberMe"/>

        <!--The following option with database persistent storage impls (persistent_logins table in DB)-->
        <!--<remember-me key="unique-and-secret"-->
                     <!--token-validity-seconds="86400"-->
                     <!--data-source-ref="dataSource"-->
                     <!--remember-me-parameter="myRememberMe"/>-->

    </http>

    <!--hardcoded user credentials-->
    <!--<authentication-manager>-->
        <!--<authentication-provider>-->
            <!--<user-service>-->
                <!--<user name="1" password="1" authorities="REGISTERED_USER "/>-->
            <!--</user-service>-->
        <!--</authentication-provider>-->
    <!--</authentication-manager>-->

    <beans:bean id="myUserDetailsService"
                class="ua.epam.spring.hometask.security.UserDetailsServiceImpl"/>
    <!--1st approach without encryption password-->
    <!--<authentication-manager>-->
        <!--<authentication-provider user-service-ref='myUserDetailsService'/>-->
    <!--</authentication-manager>-->

    <!--2nd approach with encryption password-->
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg value="12"/>
    </beans:bean>

    <beans:bean id="myAuthenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="myUserDetailsService"/>
        <beans:property name="passwordEncoder" ref="passwordEncoder"/>
    </beans:bean>

    <authentication-manager>
        <authentication-provider ref='myAuthenticationProvider'/>
    </authentication-manager>


</beans:beans>